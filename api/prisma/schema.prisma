// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(uuid())
  name          String
  email         String        @unique
  password      String
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  Reviews       Review[]
  profile_photo      ImageFile?    @relation(fields: [profile_photo_id], references: [id], onDelete: Cascade)
  profile_photo_id String?
  role          String        @default("user")
  bio           String?       @default("")
}

model ImageFile {
  id            String        @id @default(uuid())
  name          String
  path          String
  original_name String
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  movie         Movie[]
  user          User[]        
}

model Movie {
  id            String        @id @default(uuid())
  title         String
  release_date  String
  category      String
  cover      ImageFile?    @relation(fields: [cover_id], references: [id], onDelete: NoAction)
  cover_id      String?
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
  reviews       Review[]
}

model Review {
  id            String        @id @default(uuid())
  user          User          @relation(fields: [user_id], references: [id])
  user_id       String
  movie         Movie         @relation(fields: [movie_id], references: [id], onDelete: Cascade)
  movie_id      String
  review        String
  rate          Int
  created_at    DateTime      @default(now())
  updated_at    DateTime      @updatedAt
}